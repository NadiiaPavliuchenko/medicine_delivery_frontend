{"version":3,"file":"static/js/875.9cbbc366.chunk.js","mappings":"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","sources":["api/api.js","components/DeliveryForm/Form.styled.jsx","components/DeliveryForm/DeliveryForm.jsx","components/Cart/Cart.styled.jsx","components/Cart/Cart.jsx","api/createOrder.js","pages/ShoppingCart/ShoppingCart.styled.jsx","pages/ShoppingCart/ShoppingCart.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://medicine-delivery-backend-t1jj.onrender.com/\",\n});\n\nexport default api;\n","import styled from \"styled-components\";\n\nexport const StyledInputsContainer = styled.div`\n  width: 40vw;\n  height: 80vh;\n  border: 1px solid #333;\n  border-radius: 10px;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\n\nexport const StyledLabel = styled.label`\n  margin: 20px 0 10px 0;\n`;\n\nexport const StyledInput = styled.input`\n  width: 75%;\n  border-radius: 5px;\n  border: 1px solid #333;\n  padding: 10px;\n  margin-bottom: 20px;\n`;\n\nexport const StyledButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 100px;\n  margin-top: 10px;\n`;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  width: 150px;\n  border: 1px solid #333;\n  border-radius: 10px;\n  transition: background-color 0.5s ease-out;\n\n  &:hover,\n  &:focus {\n    background-color: lightgrey;\n    transition: background-color 0.5s ease-out;\n  }\n`;\n","import {\n  StyledButton,\n  StyledButtonContainer,\n  StyledInput,\n  StyledInputsContainer,\n  StyledLabel,\n} from \"./Form.styled\";\n\nconst DeliveryForm = ({ onSubmit, calculateTotalPrice }) => {\n  return (\n    <form onSubmit={(e) => onSubmit(e)}>\n      <StyledInputsContainer>\n        <StyledLabel htmlFor=\"name\">Name:</StyledLabel>\n        <StyledInput type=\"text\" name=\"name\" id=\"name\" />\n        <StyledLabel htmlFor=\"email\">Email:</StyledLabel>\n        <StyledInput type=\"email\" name=\"email\" id=\"email\" />\n        <StyledLabel htmlFor=\"phone\">Phone:</StyledLabel>\n        <StyledInput type=\"tel\" name=\"phone\" id=\"phone\" />\n        <StyledLabel htmlFor=\"address\">Address:</StyledLabel>\n        <StyledInput type=\"text\" name=\"address\" id=\"address\" />\n      </StyledInputsContainer>\n      <StyledButtonContainer>\n        <h3>TotalPrice: {calculateTotalPrice()} &#8372;</h3>\n        <StyledButton type=\"submit\">Submit</StyledButton>\n      </StyledButtonContainer>\n    </form>\n  );\n};\n\nexport default DeliveryForm;\n","import styled from \"styled-components\";\n\nexport const StyledCartContainer = styled.ul`\n  width: 60vw;\n  height: 80vh;\n  border: 1px solid #333;\n  border-radius: 10px;\n  padding: 15px;\n  overflow-y: scroll;\n  text-align: center;\n`;\n\nexport const StyledLi = styled.li`\n  width: 98%;\n  border: 1px solid #333;\n  border-radius: 5px;\n  padding: 5px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  position: relative;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const StyledH = styled.h3`\n  margin-bottom: 20px;\n`;\n\nexport const StyledP = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 10px;\n  right: 10px;\n  background-color: transparent;\n  position: absolute;\n  border: 1px solid #333;\n  width: 30px;\n  height: 30px;\n  padding: 4px;\n  border-radius: 50%;\n\n  transition: background-color 0.5s ease-out;\n\n  &:hover,\n  &:focus {\n    background-color: lightgrey;\n    transition: background-color 0.5s ease-out;\n  }\n`;\n","import {\n  StyledCartContainer,\n  StyledLi,\n  StyledH,\n  StyledP,\n  StyledButton,\n} from \"./Cart.styled\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { IconContext } from \"react-icons\";\n\nconst Cart = ({ cartItems, deleteFromCart, handleQuantityChange }) => {\n  return (\n    <StyledCartContainer>\n      {cartItems.length !== 0 ? (\n        cartItems.map((item) => (\n          <StyledLi key={item._id}>\n            <div>\n              <img src={item.photo} alt={item.name} width=\"200\" height=\"200\" />\n            </div>\n            <div>\n              <StyledH>{item.name}</StyledH>\n              <StyledP>Price: {item.price} &#8372;</StyledP>\n              <label htmlFor=\"quantity\">Quantity: </label>\n              <input\n                type=\"number\"\n                name=\"quantity\"\n                defaultValue={item.quantity}\n                onChange={(e) => handleQuantityChange(e.target.value, item._id)}\n              />\n              <StyledButton\n                type=\"button\"\n                onClick={() => deleteFromCart(item._id)}\n              >\n                <IconContext.Provider value={{ size: \"20px\" }}>\n                  <AiOutlineClose />\n                </IconContext.Provider>\n              </StyledButton>\n            </div>\n          </StyledLi>\n        ))\n      ) : (\n        <p>Cart is empty :(</p>\n      )}\n    </StyledCartContainer>\n  );\n};\n\nexport default Cart;\n","import api from \"./api\";\n\nconst createOrder = async (newOrder) => {\n  const { data } = await api.post(\"/api/orders\", newOrder);\n  return data;\n};\n\nexport default createOrder;\n","import styled from \"styled-components\";\n\nexport const StyledContaiter = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n","import React from \"react\";\nimport DeliveryForm from \"../../components/DeliveryForm/DeliveryForm\";\nimport Cart from \"../../components/Cart/Cart\";\nimport createOrder from \"../../api/createOrder\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { StyledContaiter } from \"./ShoppingCart.styled\";\n\nconst ShoppingCart = () => {\n  const [cartItems, setCartItems] = useState(() => {\n    const storedDrugs = JSON.parse(localStorage.getItem(\"medicineCart\")) || [];\n    return storedDrugs;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"medicineCart\", JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  const handleQuantityChange = (newQuantity, id) => {\n    setCartItems((prevState) => {\n      const newCartItems = [...prevState];\n      const drugToUpdate = newCartItems.findIndex((item) => item._id === id);\n      if (drugToUpdate !== -1)\n        newCartItems[drugToUpdate].quantity += newQuantity;\n      return newCartItems;\n    });\n  };\n\n  const calculateTotalPrice = () => {\n    let sum = 0;\n    cartItems.forEach((item) => (sum += item.quantity * item.price));\n    return sum;\n  };\n\n  const deleteFromCart = (id) => {\n    setCartItems((prevState) => {\n      const newCartItems = [...prevState];\n      const drugToDelete = newCartItems.findIndex((item) => item._id === id);\n      if (drugToDelete !== -1) newCartItems.splice(drugToDelete, 1);\n      return newCartItems;\n    });\n  };\n\n  const createOrderObject = (formElements) => {\n    const { name, email, phone, address } = formElements;\n    const totalPrice = calculateTotalPrice();\n    const products = cartItems.map((item) => {\n      return {\n        productId: item._id,\n        quantity: item.quantity,\n      };\n    });\n\n    const newOrder = {\n      name: name.value,\n      email: email.value,\n      phone: phone.value,\n      address: address.value,\n      price: totalPrice,\n      products,\n    };\n    return newOrder;\n  };\n\n  const sendOrderToServer = async (newOrder) => {\n    try {\n      const createdOrder = await createOrder(newOrder);\n      console.log(createdOrder);\n      setCartItems([]);\n    } catch (e) {\n      console.log(\"Error while creating an order\", e);\n    }\n  };\n\n  const handleAddOrder = async (e) => {\n    e.preventDefault();\n    const newOrder = createOrderObject(e.target.elements);\n    await sendOrderToServer(newOrder);\n    e.target.reset();\n  };\n\n  return (\n    <>\n      <StyledContaiter>\n        <DeliveryForm\n          onSubmit={handleAddOrder}\n          calculateTotalPrice={calculateTotalPrice}\n        />\n        <Cart\n          cartItems={cartItems}\n          deleteFromCart={deleteFromCart}\n          handleQuantityChange={handleQuantityChange}\n        />\n      </StyledContaiter>\n    </>\n  );\n};\n\nexport default ShoppingCart;\n"],"names":["axios","create","baseURL","StyledInputsContainer","styled","div","StyledLabel","label","StyledInput","input","StyledButtonContainer","StyledButton","button","_ref","onSubmit","calculateTotalPrice","_jsxs","e","children","_jsx","htmlFor","type","name","id","StyledCartContainer","ul","StyledLi","li","StyledH","h3","StyledP","p","cartItems","deleteFromCart","handleQuantityChange","length","map","item","src","photo","alt","width","height","price","defaultValue","quantity","onChange","target","value","_id","onClick","IconContext","Provider","size","AiOutlineClose","async","data","api","post","newOrder","StyledContaiter","ShoppingCart","setCartItems","useState","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","sum","forEach","_Fragment","DeliveryForm","preventDefault","formElements","email","phone","address","totalPrice","products","productId","createOrderObject","elements","createdOrder","createOrder","console","log","sendOrderToServer","reset","Cart","prevState","newCartItems","drugToDelete","findIndex","splice","newQuantity","drugToUpdate"],"sourceRoot":""}