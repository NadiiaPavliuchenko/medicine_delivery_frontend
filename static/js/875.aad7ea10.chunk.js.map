{"version":3,"file":"static/js/875.aad7ea10.chunk.js","mappings":"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","sources":["api/api.js","components/DeliveryForm/Form.styled.jsx","components/DeliveryForm/DeliveryForm.jsx","components/Cart/Cart.styled.jsx","components/Cart/Cart.jsx","api/createOrder.js","pages/ShoppingCart/ShoppingCart.styled.jsx","pages/ShoppingCart/ShoppingCart.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://medicine-delivery-backend-t1jj.onrender.com/\",\r\n});\r\n\r\nexport default api;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledInputsContainer = styled.div`\r\n  width: 40vw;\r\n  height: 80vh;\r\n  border: 1px solid #333;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const StyledLabel = styled.label`\r\n  margin: 20px 0 10px 0;\r\n`;\r\n\r\nexport const StyledInput = styled.input`\r\n  width: 75%;\r\n  border-radius: 5px;\r\n  border: 1px solid #333;\r\n  padding: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const StyledButtonContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: 100px;\r\n  margin-top: 10px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 10px;\r\n  width: 150px;\r\n  border: 1px solid #333;\r\n  border-radius: 10px;\r\n  transition: background-color 0.5s ease-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: lightgrey;\r\n    transition: background-color 0.5s ease-out;\r\n  }\r\n`;\r\n","import {\r\n  StyledButton,\r\n  StyledButtonContainer,\r\n  StyledInput,\r\n  StyledInputsContainer,\r\n  StyledLabel,\r\n} from \"./Form.styled\";\r\n\r\nconst DeliveryForm = ({ onSubmit, calculateTotalPrice }) => {\r\n  return (\r\n    <form onSubmit={(e) => onSubmit(e)}>\r\n      <StyledInputsContainer>\r\n        <StyledLabel htmlFor=\"name\">Name:</StyledLabel>\r\n        <StyledInput type=\"text\" name=\"name\" id=\"name\" />\r\n        <StyledLabel htmlFor=\"email\">Email:</StyledLabel>\r\n        <StyledInput type=\"email\" name=\"email\" id=\"email\" />\r\n        <StyledLabel htmlFor=\"phone\">Phone:</StyledLabel>\r\n        <StyledInput type=\"tel\" name=\"phone\" id=\"phone\" />\r\n        <StyledLabel htmlFor=\"address\">Address:</StyledLabel>\r\n        <StyledInput type=\"text\" name=\"address\" id=\"address\" />\r\n      </StyledInputsContainer>\r\n      <StyledButtonContainer>\r\n        <h3>TotalPrice: {calculateTotalPrice()} &#8372;</h3>\r\n        <StyledButton type=\"submit\">Submit</StyledButton>\r\n      </StyledButtonContainer>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default DeliveryForm;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledCartContainer = styled.ul`\r\n  width: 60vw;\r\n  height: 80vh;\r\n  border: 1px solid #333;\r\n  border-radius: 10px;\r\n  padding: 15px;\r\n  overflow-y: scroll;\r\n  text-align: center;\r\n`;\r\n\r\nexport const StyledLi = styled.li`\r\n  width: 98%;\r\n  border: 1px solid #333;\r\n  border-radius: 5px;\r\n  padding: 5px;\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 10px;\r\n  position: relative;\r\n  &:not(:last-child) {\r\n    margin-bottom: 20px;\r\n  }\r\n`;\r\n\r\nexport const StyledH = styled.h3`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const StyledP = styled.p`\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  top: 10px;\r\n  right: 10px;\r\n  background-color: transparent;\r\n  position: absolute;\r\n  border: 1px solid #333;\r\n  width: 30px;\r\n  height: 30px;\r\n  padding: 4px;\r\n  border-radius: 50%;\r\n\r\n  transition: background-color 0.5s ease-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: lightgrey;\r\n    transition: background-color 0.5s ease-out;\r\n  }\r\n`;\r\n","import {\r\n  StyledCartContainer,\r\n  StyledLi,\r\n  StyledH,\r\n  StyledP,\r\n  StyledButton,\r\n} from \"./Cart.styled\";\r\nimport { AiOutlineClose } from \"react-icons/ai\";\r\nimport { IconContext } from \"react-icons\";\r\n\r\nconst Cart = ({ cartItems, deleteFromCart, handleQuantityChange }) => {\r\n  return (\r\n    <StyledCartContainer>\r\n      {cartItems.length !== 0 ? (\r\n        cartItems.map((item) => (\r\n          <StyledLi key={item._id}>\r\n            <div>\r\n              <img src={item.photo} alt={item.name} width=\"200\" height=\"200\" />\r\n            </div>\r\n            <div>\r\n              <StyledH>{item.name}</StyledH>\r\n              <StyledP>Price: {item.price} &#8372;</StyledP>\r\n              <label htmlFor=\"quantity\">Quantity: </label>\r\n              <input\r\n                type=\"number\"\r\n                name=\"quantity\"\r\n                defaultValue={item.quantity}\r\n                onChange={(e) => handleQuantityChange(e.target.value, item._id)}\r\n              />\r\n              <StyledButton\r\n                type=\"button\"\r\n                onClick={() => deleteFromCart(item._id)}\r\n              >\r\n                <IconContext.Provider value={{ size: \"20px\" }}>\r\n                  <AiOutlineClose />\r\n                </IconContext.Provider>\r\n              </StyledButton>\r\n            </div>\r\n          </StyledLi>\r\n        ))\r\n      ) : (\r\n        <p>Cart is empty :(</p>\r\n      )}\r\n    </StyledCartContainer>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import api from \"./api\";\r\n\r\nconst createOrder = async (newOrder) => {\r\n  const { data } = await api.post(\"/api/orders\", newOrder);\r\n  return data;\r\n};\r\n\r\nexport default createOrder;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContaiter = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n","import React from \"react\";\r\nimport DeliveryForm from \"../../components/DeliveryForm/DeliveryForm\";\r\nimport Cart from \"../../components/Cart/Cart\";\r\nimport createOrder from \"../../api/createOrder\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { StyledContaiter } from \"./ShoppingCart.styled\";\r\n\r\nconst ShoppingCart = () => {\r\n  const [cartItems, setCartItems] = useState(() => {\r\n    const storedDrugs = JSON.parse(localStorage.getItem(\"medicineCart\")) || [];\r\n    return storedDrugs;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"medicineCart\", JSON.stringify(cartItems));\r\n  }, [cartItems]);\r\n\r\n  const handleQuantityChange = (newQuantity, id) => {\r\n    setCartItems((prevState) => {\r\n      const newCartItems = [...prevState];\r\n      const drugToUpdate = newCartItems.findIndex((item) => item._id === id);\r\n      if (drugToUpdate !== -1)\r\n        newCartItems[drugToUpdate].quantity += newQuantity;\r\n      return newCartItems;\r\n    });\r\n  };\r\n\r\n  const calculateTotalPrice = () => {\r\n    let sum = 0;\r\n    cartItems.forEach((item) => (sum += item.quantity * item.price));\r\n    return sum;\r\n  };\r\n\r\n  const deleteFromCart = (id) => {\r\n    setCartItems((prevState) => {\r\n      const newCartItems = [...prevState];\r\n      const drugToDelete = newCartItems.findIndex((item) => item._id === id);\r\n      if (drugToDelete !== -1) newCartItems.splice(drugToDelete, 1);\r\n      return newCartItems;\r\n    });\r\n  };\r\n\r\n  const createOrderObject = (formElements) => {\r\n    const { name, email, phone, address } = formElements;\r\n    const totalPrice = calculateTotalPrice();\r\n    const products = cartItems.map((item) => {\r\n      return {\r\n        productId: item._id,\r\n        quantity: item.quantity,\r\n      };\r\n    });\r\n\r\n    const newOrder = {\r\n      name: name.value,\r\n      email: email.value,\r\n      phone: phone.value,\r\n      address: address.value,\r\n      price: totalPrice,\r\n      products,\r\n    };\r\n    return newOrder;\r\n  };\r\n\r\n  const sendOrderToServer = async (newOrder) => {\r\n    try {\r\n      const createdOrder = await createOrder(newOrder);\r\n      console.log(createdOrder);\r\n      setCartItems([]);\r\n    } catch (e) {\r\n      console.log(\"Error while creating an order\", e);\r\n    }\r\n  };\r\n\r\n  const handleAddOrder = async (e) => {\r\n    e.preventDefault();\r\n    const newOrder = createOrderObject(e.target.elements);\r\n    await sendOrderToServer(newOrder);\r\n    e.target.reset();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledContaiter>\r\n        <DeliveryForm\r\n          onSubmit={handleAddOrder}\r\n          calculateTotalPrice={calculateTotalPrice}\r\n        />\r\n        <Cart\r\n          cartItems={cartItems}\r\n          deleteFromCart={deleteFromCart}\r\n          handleQuantityChange={handleQuantityChange}\r\n        />\r\n      </StyledContaiter>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShoppingCart;\r\n"],"names":["axios","create","baseURL","StyledInputsContainer","styled","div","_templateObject","_taggedTemplateLiteral","StyledLabel","label","_templateObject2","StyledInput","input","_templateObject3","StyledButtonContainer","_templateObject4","StyledButton","button","_templateObject5","_ref","onSubmit","calculateTotalPrice","_jsxs","e","children","_jsx","htmlFor","type","name","id","StyledCartContainer","ul","StyledLi","li","StyledH","h3","StyledP","p","cartItems","deleteFromCart","handleQuantityChange","length","map","item","src","photo","alt","width","height","price","defaultValue","quantity","onChange","target","value","_id","onClick","IconContext","Provider","size","AiOutlineClose","async","data","api","post","newOrder","StyledContaiter","ShoppingCart","setCartItems","useState","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","sum","forEach","_Fragment","DeliveryForm","preventDefault","formElements","email","phone","address","totalPrice","products","productId","createOrderObject","elements","createdOrder","createOrder","console","log","sendOrderToServer","reset","Cart","prevState","newCartItems","drugToDelete","findIndex","splice","newQuantity","drugToUpdate"],"sourceRoot":""}