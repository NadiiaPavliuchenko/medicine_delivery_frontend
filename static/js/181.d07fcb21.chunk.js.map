{"version":3,"file":"static/js/181.d07fcb21.chunk.js","mappings":"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","sources":["api/api.js","api/getPharmacies.js","components/Pharmacies/Pharmacies.styled.jsx","components/Pharmacies/Pharmacies.jsx","components/Drugs/Drugs.styled.jsx","components/Drugs/Drugs.jsx","api/getDrugsByPharmacy.js","api/getDrugs.js","api/updateFavorite.js","pages/Shop/Shop.styled.jsx","pages/Shop/Shop.jsx"],"sourcesContent":["import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://medicine-delivery-backend-t1jj.onrender.com/\",\r\n});\r\n\r\nexport default api;\r\n","import api from \"./api\";\r\n\r\nconst getPharmacies = async () => {\r\n  const { data } = await api.get(\"/api/pharmacies\");\r\n  return data;\r\n};\r\n\r\nexport default getPharmacies;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContainer = styled.div`\r\n  width: 20vw;\r\n  height: 100%;\r\n  border: 1px solid #333;\r\n  border-radius: 10px;\r\n  padding: 20px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const StyledH = styled.h3`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nexport const StyledLi = styled.li`\r\n  border: 1px solid #333;\r\n  border-radius: 5px;\r\n  text-align: center;\r\n  padding: 20px;\r\n  transition: background-color 0.5s ease-out;\r\n  &:not(:last-child) {\r\n    margin-bottom: 10px;\r\n  }\r\n  &:hover,\r\n  &:focus {\r\n    background-color: lightgray;\r\n    transition: background-color 0.5s ease-out;\r\n  }\r\n  ${(props) =>\r\n    props.selected &&\r\n    `\r\n    background-color: lightgray;\r\n  `}\r\n`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport getPharmacies from \"../../api/getPharmacies\";\r\nimport { StyledContainer, StyledH, StyledLi } from \"./Pharmacies.styled\";\r\n\r\nconst Pharmacies = ({ onSelect, selectedPahrmacy }) => {\r\n  const [pharmacies, setPharmacies] = useState([]);\r\n  useEffect(() => {\r\n    const getPharmaciesList = async () => {\r\n      try {\r\n        const pharmaciesList = await getPharmacies();\r\n\r\n        setPharmacies(pharmaciesList);\r\n      } catch (e) {\r\n        console.log(\"Error getting pharmacies list\", e);\r\n      }\r\n    };\r\n    getPharmaciesList();\r\n  });\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <StyledH>Pharmacies:</StyledH>\r\n      <ul>\r\n        {pharmacies &&\r\n          pharmacies.map((pharmacy) => (\r\n            <StyledLi\r\n              key={pharmacy._id}\r\n              onClick={() => onSelect(pharmacy._id)}\r\n              selected={selectedPahrmacy === pharmacy._id}\r\n            >\r\n              <p>{pharmacy.name}</p>\r\n            </StyledLi>\r\n          ))}\r\n      </ul>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default Pharmacies;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledList = styled.ul`\r\n  width: 80vw;\r\n  height: 80vh;\r\n  border: 1px solid #333;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  padding: 15px;\r\n  gap: 10px;\r\n  overflow-y: scroll;\r\n`;\r\n\r\nexport const StyledLi = styled.li`\r\n  border: 1px solid #333;\r\n  border-radius: 5px;\r\n  width: calc((100% / 3) - 10px);\r\n  height: 300px;\r\n`;\r\n\r\nexport const StyledThumb = styled.div`\r\n  width: 200px;\r\n  height: 200px;\r\n  border-radius: 5px;\r\n  overflow: hidden;\r\n  margin: 0 auto;\r\n`;\r\n\r\nexport const StyledName = styled.p`\r\n  font-weight: 600;\r\n  margin: 5px;\r\n`;\r\n\r\nexport const StyledButton = styled.button`\r\n  padding: 5px;\r\n  border-radius: 5px;\r\n  border: 1px solid #333;\r\n  transition: background-color 0.5s ease-out;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    background-color: lightgrey;\r\n    transition: background-color 0.5s ease-out;\r\n  }\r\n`;\r\n\r\nexport const StyledDiv = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin: 20px 5px;\r\n`;\r\n\r\nexport const StyledHeart = styled.button`\r\n  background-color: transparent;\r\n  border: none;\r\n\r\n  ${(props) => props.favorite === \"false\" && `color: black;`}\r\n  ${(props) => props.favorite === \"true\" && `color: red;`}\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  StyledButton,\r\n  StyledLi,\r\n  StyledList,\r\n  StyledName,\r\n  StyledThumb,\r\n  StyledDiv,\r\n  StyledHeart,\r\n} from \"./Drugs.styled\";\r\nimport { SlHeart } from \"react-icons/sl\";\r\n\r\nconst Drugs = ({ drugsList, changeFavorite }) => {\r\n  const [drugs, setDrugs] = useState(() => {\r\n    const storedDrugs = JSON.parse(localStorage.getItem(\"medicineCart\")) || [];\r\n    return storedDrugs;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"medicineCart\", JSON.stringify(drugs));\r\n  }, [drugs]);\r\n\r\n  const handleButtonClick = (drug) => {\r\n    const cartRecord = {\r\n      ...drug,\r\n      quantity: 1,\r\n    };\r\n    const isExist = drugs.find(\r\n      (item) => item.name === drug.name && item.pharmacy === drug.pharmacy\r\n    );\r\n    if (typeof isExist !== \"undefined\") {\r\n      isExist.quantity += 1;\r\n      setDrugs([...drugs]);\r\n    } else {\r\n      setDrugs((prevState) => [...prevState, cartRecord]);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledList>\r\n      {drugsList.length > 0 &&\r\n        drugsList.map((drug) => (\r\n          <StyledLi key={drug._id}>\r\n            <StyledThumb>\r\n              <img src={drug.photo} alt={drug.name} width=\"200\" height=\"200\" />\r\n            </StyledThumb>\r\n            <StyledName>{drug.name}</StyledName>\r\n            <StyledDiv>\r\n              <p>Price: {drug.price} &#8372;</p>\r\n              <StyledButton\r\n                type=\"button\"\r\n                onClick={() => handleButtonClick(drug)}\r\n              >\r\n                Add to cart\r\n              </StyledButton>\r\n              <StyledHeart\r\n                onClick={() => changeFavorite(drug)}\r\n                favorite={drug.favorite.toString()}\r\n              >\r\n                <SlHeart />\r\n              </StyledHeart>\r\n            </StyledDiv>\r\n          </StyledLi>\r\n        ))}\r\n    </StyledList>\r\n  );\r\n};\r\n\r\nexport default Drugs;\r\n","import api from \"./api\";\r\n\r\nconst getDrugsByPharmacy = async (pharmacyId) => {\r\n  const { data } = await api.get(`/api/drugs/${pharmacyId}`);\r\n  return data;\r\n};\r\n\r\nexport default getDrugsByPharmacy;\r\n","import api from \"./api\";\r\n\r\nconst getDrugs = async () => {\r\n  const { data } = await api.get(\"/api/drugs\");\r\n  return data;\r\n};\r\n\r\nexport default getDrugs;\r\n","import api from \"./api\";\r\n\r\nconst updateFavorite = async (drugId, favorite) => {\r\n  const { data } = await api.patch(`/api/drugs/${drugId}/favorite`, {\r\n    favorite,\r\n  });\r\n  return data;\r\n};\r\n\r\nexport default updateFavorite;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledContaiter = styled.div`\r\n  display: flex;\r\n  gap: 10px;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport Pharmacies from \"../../components/Pharmacies/Pharmacies\";\r\nimport Drugs from \"../../components/Drugs/Drugs\";\r\nimport getDrugsByPharmacy from \"../../api/getDrugsByPharmacy\";\r\nimport getDrugs from \"../../api/getDrugs\";\r\nimport updateFavorite from \"../../api/updateFavorite.js\";\r\nimport { StyledContaiter } from \"./Shop.styled\";\r\n\r\nconst Shop = () => {\r\n  const [selectedPharmacy, setSelectedPharmacy] = useState(null);\r\n  const [drugs, setDrugs] = useState([]);\r\n\r\n  const handlePharmacySelect = (pharmacyId) => {\r\n    setSelectedPharmacy(pharmacyId);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getDrugsList = async () => {\r\n      try {\r\n        const drugsList = await getDrugs();\r\n\r\n        setDrugs(drugsList);\r\n      } catch (e) {\r\n        console.log(\"Error while getting drugs list\", e);\r\n      }\r\n    };\r\n    getDrugsList();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getDrugs = async () => {\r\n      try {\r\n        const drugsList = await getDrugsByPharmacy(selectedPharmacy);\r\n\r\n        setDrugs(drugsList);\r\n      } catch (e) {\r\n        console.log(\"Error while getting drugs list\", e);\r\n      }\r\n    };\r\n    if (!selectedPharmacy) return;\r\n    getDrugs();\r\n  }, [selectedPharmacy]);\r\n\r\n  const changeFavorite = async (drug) => {\r\n    try {\r\n      const updatedDrug = await updateFavorite(drug._id, !drug.favorite);\r\n      setDrugs((prevDrugs) => {\r\n        return prevDrugs.map((prevDrug) =>\r\n          prevDrug._id === updatedDrug._id\r\n            ? { ...prevDrug, favorite: updatedDrug.favorite }\r\n            : prevDrug\r\n        );\r\n      });\r\n    } catch (e) {\r\n      console.log(\"Error while marking drug as favorite\", e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <StyledContaiter>\r\n      <Pharmacies\r\n        onSelect={handlePharmacySelect}\r\n        selectedPahrmacy={selectedPharmacy}\r\n      />\r\n      <Drugs drugsList={drugs} changeFavorite={changeFavorite} />\r\n    </StyledContaiter>\r\n  );\r\n};\r\n\r\nexport default Shop;\r\n"],"names":["axios","create","baseURL","async","data","api","get","StyledContainer","styled","div","_templateObject","_taggedTemplateLiteral","StyledH","h3","_templateObject2","StyledLi","li","_templateObject3","props","selected","_ref","onSelect","selectedPahrmacy","pharmacies","setPharmacies","useState","useEffect","pharmaciesList","getPharmacies","e","console","log","getPharmaciesList","_jsxs","children","_jsx","map","pharmacy","onClick","_id","name","StyledList","ul","StyledThumb","StyledName","p","_templateObject4","StyledButton","button","_templateObject5","StyledDiv","_templateObject6","StyledHeart","_templateObject7","favorite","drugsList","changeFavorite","drugs","setDrugs","JSON","parse","localStorage","getItem","setItem","stringify","length","drug","src","photo","alt","width","height","price","type","cartRecord","quantity","isExist","find","item","prevState","handleButtonClick","toString","SlHeart","concat","pharmacyId","drugId","patch","StyledContaiter","Shop","selectedPharmacy","setSelectedPharmacy","getDrugs","getDrugsList","getDrugsByPharmacy","Pharmacies","Drugs","updatedDrug","updateFavorite","prevDrugs","prevDrug"],"sourceRoot":""}