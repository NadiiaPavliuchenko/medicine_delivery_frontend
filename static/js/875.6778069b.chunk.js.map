{"version":3,"file":"static/js/875.6778069b.chunk.js","mappings":"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","sources":["api/api.js","components/DeliveryForm/Form.styled.jsx","components/DeliveryForm/DeliveryForm.jsx","components/Cart/Cart.styled.jsx","components/Cart/Cart.jsx","api/createOrder.js","pages/ShoppingCart/ShoppingCart.styled.jsx","pages/ShoppingCart/ShoppingCart.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://medicine-delivery-backend-t1jj.onrender.com/\",\n});\n\nexport default api;\n","import styled from \"styled-components\";\n\nexport const FormStyled = styled.form`\n  width: 100vw;\n  @media screen and (min-width: 768px) {\n    width: 50vw;\n  }\n`;\n\nexport const StyledInputsContainer = styled.div`\n  border: 1px solid #333;\n  border-radius: 10px;\n  padding: 15px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  @media screen and (min-width: 768px) {\n    width: 50vw;\n    height: 80vh;\n  }\n`;\n\nexport const FieldContainer = styled.div`\n  position: relative;\n  width: 90%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const StyledLabel = styled.label`\n  margin: 20px 0 10px 0;\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    margin: 10px 0 10px 0;\n  }\n`;\n\nexport const StyledInput = styled.input`\n  border-radius: 5px;\n  border: 1px solid #333;\n  padding: 10px;\n  margin-bottom: 20px;\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    margin-bottom: 10px;\n    height: 35px;\n  }\n`;\n\nexport const StyledButtonContainer = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 80px;\n  margin-top: 10px;\n\n  @media screen and (min-width: 768px) {\n    gap: 30px;\n  }\n\n  @media screen and (min-width: 1440px) {\n    gap: 100px;\n  }\n`;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  width: 150px;\n  border: 1px solid #333;\n  border-radius: 10px;\n  transition: background-color 0.5s ease-out;\n\n  &:hover,\n  &:focus {\n    background-color: lightgrey;\n    transition: background-color 0.5s ease-out;\n  }\n`;\n\nexport const Feedback = styled.div`\n  color: red;\n  position: absolute;\n  top: 100px;\n  left: 0;\n  font-size: small;\n\n  @media screen and (min-width: 768px) and (max-width: 1439px) {\n    top: 78px;\n  }\n`;\n","import {\n  FormStyled,\n  StyledButton,\n  StyledButtonContainer,\n  StyledInput,\n  StyledInputsContainer,\n  StyledLabel,\n  Feedback,\n  FieldContainer,\n} from \"./Form.styled\";\n\nimport { Formik } from \"formik\";\nimport * as Yup from \"yup\";\n\nconst DeliveryForm = ({ onSubmit, calculateTotalPrice }) => {\n  const validateForm = Yup.object().shape({\n    name: Yup.string().min(2, \"Too Short!\").max(50, \"Too Long!\").required(),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n    phone: Yup.string()\n      .matches(/\\(\\d{3}\\) \\d{3}-\\d{4}/, {\n        message: \"Invalid phone number\",\n        excludeEmptyString: false,\n      })\n      .required(\"Phone number is required\"),\n    address: Yup.string().required(\"Address is required\"),\n  });\n\n  return (\n    <Formik\n      initialValues={{ name: \"\", email: \"\", phone: \"\", address: \"\" }}\n      validationSchema={validateForm}\n      onSubmit={onSubmit}\n    >\n      {(props) => (\n        <FormStyled\n          onSubmit={(e) => {\n            e.preventDefault();\n            props.handleSubmit();\n          }}\n        >\n          <StyledInputsContainer>\n            <FieldContainer>\n              <StyledLabel htmlFor=\"name\">Name:</StyledLabel>\n              <StyledInput\n                type=\"text\"\n                name=\"name\"\n                id=\"name\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.name}\n              />\n              {props.errors.name && <Feedback>{props.errors.name}</Feedback>}\n            </FieldContainer>\n            <FieldContainer>\n              <StyledLabel htmlFor=\"email\">Email:</StyledLabel>\n              <StyledInput\n                type=\"email\"\n                name=\"email\"\n                id=\"email\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.email}\n              />\n              {props.errors.email && <Feedback>{props.errors.email}</Feedback>}\n            </FieldContainer>\n            <FieldContainer>\n              <StyledLabel htmlFor=\"phone\">Phone:</StyledLabel>\n              <StyledInput\n                type=\"tel\"\n                name=\"phone\"\n                id=\"phone\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.phone}\n              />\n              {props.errors.phone && <Feedback>{props.errors.phone}</Feedback>}\n            </FieldContainer>\n            <FieldContainer>\n              <StyledLabel htmlFor=\"address\">Address:</StyledLabel>\n              <StyledInput\n                type=\"text\"\n                name=\"address\"\n                id=\"address\"\n                onChange={props.handleChange}\n                onBlur={props.handleBlur}\n                value={props.values.address}\n              />\n              {props.errors.address && (\n                <Feedback>{props.errors.address}</Feedback>\n              )}\n            </FieldContainer>\n          </StyledInputsContainer>\n          <StyledButtonContainer>\n            <h3>TotalPrice: {calculateTotalPrice()} &#8372;</h3>\n            <StyledButton type=\"submit\">Submit</StyledButton>\n          </StyledButtonContainer>\n        </FormStyled>\n      )}\n    </Formik>\n  );\n};\n\nexport default DeliveryForm;\n","import styled from \"styled-components\";\n\nexport const StyledCartContainer = styled.ul`\n  width: 100vw;\n  border: 1px solid #333;\n  border-radius: 10px;\n  padding: 15px;\n  overflow-y: scroll;\n\n  @media screen and (min-width: 768px) {\n    width: 50vw;\n    height: 80vh;\n  }\n`;\n\nexport const StyledLi = styled.li`\n  border: 1px solid #333;\n  border-radius: 5px;\n  padding: 10px;\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  position: relative;\n  &:not(:last-child) {\n    margin-bottom: 20px;\n  }\n\n  @media screen and (min-width: 768px) {\n    padding: 15px;\n  }\n  @media screen and (min-width: 1440px) {\n    padding: 20px;\n    gap: 30px;\n  }\n`;\n\nexport const StyledH = styled.h3`\n  margin-bottom: 20px;\n`;\n\nexport const StyledP = styled.p`\n  margin-bottom: 10px;\n`;\n\nexport const StyledBlock = styled.div`\n  display: flex;\n  gap: 10px;\n`;\n\nexport const StyledInput = styled.input`\n  width: 90px;\n`;\n\nexport const StyledButton = styled.button`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  top: 10px;\n  right: 10px;\n  background-color: transparent;\n  position: absolute;\n  border: 1px solid #333;\n  width: 30px;\n  height: 30px;\n  padding: 4px;\n  border-radius: 50%;\n\n  transition: background-color 0.5s ease-out;\n\n  &:hover,\n  &:focus {\n    background-color: lightgrey;\n    transition: background-color 0.5s ease-out;\n  }\n`;\n\nexport const StyledInfo = styled.p`\n  text-align: center;\n  margin: auto;\n`;\n","import {\n  StyledCartContainer,\n  StyledLi,\n  StyledH,\n  StyledP,\n  StyledButton,\n  StyledBlock,\n  StyledInput,\n  StyledInfo,\n} from \"./Cart.styled\";\nimport { AiOutlineClose } from \"react-icons/ai\";\nimport { IconContext } from \"react-icons\";\n\nconst Cart = ({ cartItems, deleteFromCart, handleQuantityChange }) => {\n  return (\n    <StyledCartContainer>\n      {cartItems.length !== 0 ? (\n        cartItems.map((item) => (\n          <StyledLi key={item._id}>\n            <div>\n              <img src={item.photo} alt={item.name} width=\"200\" height=\"200\" />\n            </div>\n            <div>\n              <StyledH>{item.name}</StyledH>\n              <StyledP>Price: {item.price} &#8372;</StyledP>\n              <StyledBlock>\n                <label htmlFor=\"quantity\">Quantity: </label>\n                <StyledInput\n                  type=\"number\"\n                  name=\"quantity\"\n                  defaultValue={item.quantity}\n                  onChange={(e) =>\n                    handleQuantityChange(e.target.value, item._id)\n                  }\n                />\n              </StyledBlock>\n              <StyledButton\n                type=\"button\"\n                onClick={() => deleteFromCart(item._id)}\n              >\n                <IconContext.Provider value={{ size: \"20px\" }}>\n                  <AiOutlineClose />\n                </IconContext.Provider>\n              </StyledButton>\n            </div>\n          </StyledLi>\n        ))\n      ) : (\n        <StyledInfo>Cart is empty :(</StyledInfo>\n      )}\n    </StyledCartContainer>\n  );\n};\n\nexport default Cart;\n","import api from \"./api\";\n\nconst createOrder = async (newOrder) => {\n  const { data } = await api.post(\"/api/orders\", newOrder);\n  return data;\n};\n\nexport default createOrder;\n","import styled from \"styled-components\";\n\nexport const StyledContaiter = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  margin-top: 20px;\n\n  @media screen and (min-width: 768px) {\n    flex-wrap: nowrap;\n  }\n`;\n","import React from \"react\";\nimport DeliveryForm from \"../../components/DeliveryForm/DeliveryForm\";\nimport Cart from \"../../components/Cart/Cart\";\nimport createOrder from \"../../api/createOrder\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { StyledContaiter } from \"./ShoppingCart.styled\";\n\nconst ShoppingCart = () => {\n  const [cartItems, setCartItems] = useState(() => {\n    const storedDrugs = JSON.parse(localStorage.getItem(\"medicineCart\")) || [];\n    return storedDrugs;\n  });\n\n  useEffect(() => {\n    localStorage.setItem(\"medicineCart\", JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  const handleQuantityChange = (newQuantity, id) => {\n    setCartItems((prevState) => {\n      const newCartItems = [...prevState];\n      const drugToUpdate = newCartItems.findIndex((item) => item._id === id);\n      if (drugToUpdate !== -1)\n        newCartItems[drugToUpdate].quantity += newQuantity;\n      return newCartItems;\n    });\n  };\n\n  const calculateTotalPrice = () => {\n    let sum = 0;\n    cartItems.forEach((item) => (sum += item.quantity * item.price));\n    return sum;\n  };\n\n  const deleteFromCart = (id) => {\n    setCartItems((prevState) => {\n      const newCartItems = [...prevState];\n      const drugToDelete = newCartItems.findIndex((item) => item._id === id);\n      if (drugToDelete !== -1) newCartItems.splice(drugToDelete, 1);\n      return newCartItems;\n    });\n  };\n\n  const createOrderObject = (formElements) => {\n    const { name, email, phone, address } = formElements;\n    const totalPrice = calculateTotalPrice();\n    const products = cartItems.map((item) => {\n      return {\n        productId: item._id,\n        quantity: item.quantity,\n      };\n    });\n\n    const newOrder = {\n      name: name,\n      email: email,\n      phone: phone,\n      address: address,\n      price: totalPrice,\n      products,\n    };\n\n    return newOrder;\n  };\n\n  const sendOrderToServer = async (newOrder) => {\n    try {\n      await createOrder(newOrder);\n      setCartItems([]);\n    } catch (e) {\n      console.log(\"Error while creating an order\", e);\n    }\n  };\n\n  const handleAddOrder = async (values, { resetForm }) => {\n    const newOrder = createOrderObject(values);\n    await sendOrderToServer(newOrder);\n    resetForm();\n  };\n\n  return (\n    <>\n      <StyledContaiter>\n        <DeliveryForm\n          onSubmit={handleAddOrder}\n          calculateTotalPrice={calculateTotalPrice}\n        />\n        <Cart\n          cartItems={cartItems}\n          deleteFromCart={deleteFromCart}\n          handleQuantityChange={handleQuantityChange}\n        />\n      </StyledContaiter>\n    </>\n  );\n};\n\nexport default ShoppingCart;\n"],"names":["axios","create","baseURL","FormStyled","styled","form","StyledInputsContainer","div","FieldContainer","StyledLabel","label","StyledInput","input","StyledButtonContainer","StyledButton","button","Feedback","_ref","onSubmit","calculateTotalPrice","validateForm","Yup","shape","name","min","max","required","email","phone","matches","message","excludeEmptyString","address","_jsx","Formik","initialValues","validationSchema","children","props","_jsxs","e","preventDefault","handleSubmit","htmlFor","type","id","onChange","handleChange","onBlur","handleBlur","value","values","errors","StyledCartContainer","ul","StyledLi","li","StyledH","h3","StyledP","p","StyledBlock","StyledInfo","cartItems","deleteFromCart","handleQuantityChange","length","map","item","src","photo","alt","width","height","price","defaultValue","quantity","target","_id","onClick","IconContext","Provider","size","AiOutlineClose","async","data","api","post","newOrder","StyledContaiter","ShoppingCart","setCartItems","useState","JSON","parse","localStorage","getItem","useEffect","setItem","stringify","sum","forEach","_Fragment","DeliveryForm","resetForm","formElements","products","productId","createOrderObject","createOrder","console","log","sendOrderToServer","Cart","prevState","newCartItems","drugToDelete","findIndex","splice","newQuantity","drugToUpdate"],"sourceRoot":""}